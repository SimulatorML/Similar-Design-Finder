name: Build, Test, and Deploy Docker Image

on:
  push:
    branches:
      - develop/CICD
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u simulatorml --password-stdin

      - name: Build Docker image
        run: docker-compose -f docker/docker-compose.yaml build

      - name: Tag Docker image changes
        run: docker tag similar_design_finder_service:latest ghcr.io/simulatorml/similar-design-finder:latest

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/simulatorml/similar-design-finder:latest

  lint:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pre-commit

      - name: Run linters and formatters
        id: lint
        run: pre-commit run --all-files

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pytest

      - name: Run tests
        run: pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Deploy to remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Logging in to GitHub Container Registry..."
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "Starting deployment..."
            echo "Stopping existing Docker containers if they exist..."
            docker-compose -f docker/docker-compose.yaml down
            echo "Pulling Docker image..."
            docker pull ghcr.io/simulatorml/similar-design-finder:latest
            echo "Running new Docker container..."
            docker run -d ghcr.io/simulatorml/similar-design-finder:latest
