name: Deploy the project

on:
  push:
    branches:
      - main
      - develop/**
  workflow_dispatch:

  lint-test:
    name: Lint and test
    uses: SimulatorML/Similar-Design-Finder/blob/develop/CICD/.github/workflows/ci-dev.yml@develop/CICD

  build-and-push:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u simulatorml --password-stdin

      - name: Add .env.local file for passing docker-compose build and push
        run: touch docker/.env.local

      - name: Build Docker image
        run: docker-compose -f docker/docker-compose.yaml build

      - name: Push Docker image to GitHub Container Registry
        run: docker-compose -f docker/docker-compose.yaml push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy docker-compose.yaml to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "docker/docker-compose.yaml"
          target: "deploys/finder"
          strip_components: 1

      - name: Deploy to remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Logging in to GitHub Container Registry..."
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "Creating .env.prod file..."
            cd deploys/finder/
            echo "${{ secrets.ENV_PROD }}" > .env.prod

            echo "Pulling Docker images and restarting services..."
            export ENV=prod
            docker-compose pull
            docker-compose down
            docker-compose up -d
